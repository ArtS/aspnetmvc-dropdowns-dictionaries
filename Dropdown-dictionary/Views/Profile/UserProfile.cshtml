@model Dropdowns.Models.UserProfileModel

@{ ViewBag.Title = "Your profile"; }

<div class="row">
    <div class="col-sm-4 col-sm-offset-4">

        <h1>Your profile</h1>

        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm("UserProfile", "Profile", FormMethod.Post, new { role = "form" })) {

                    @* First Name textbox *@
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName)
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName)
                    </div>
                    
                    @* Last Name textbox *@
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName)
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName)
                    </div>

                    @* State selection dropdown *@
                    <div class="form-group">
                        @Html.LabelFor(m => m.State)
                        @Html.DropDownListFor(m => m.State, // Store selected value in Model.State

                                              // This argument needs some explanation - here we take a Distionary<string, string>
                                              // and turn it into an instance of SelectList, specifying that it should use 
                                              // 'Key' as the value of for <option> tags and 'Value' for the text
                                              new SelectList(Model.States, "Key", "Value"),

                                              "- Please select your state -", // Text for the first 'default' option
                                              new { @class = "form-control" }) @* A class name to assign to "select" tag *@
                        @Html.ValidationMessageFor(m => m.State)
                    </div>

                    <button type="submit" class="btn btn-primary">Update</button>
                }
            </div>
        </div>
    </div>
</div>
<script>
    (function($) {
        $('.input-validation-error').parents('.form-group').addClass('has-error');
        $('.field-validation-error').addClass('text-danger');
    })(jQuery);
</script>